import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class Main {

	public static void main(String[] args) throws IOException, InterruptedException {

		HashTable hashtable = new HashTable();
		BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
		int option, key;

		System.out.println("---HASH TABLE---");
		while (true) {

			try {
				System.out.println("\n1. Add New Key");
				System.out.println("2. Display Hash Table");
				System.out.println("3. Search");
				System.out.println("4. Delete");
				System.out.println("5. Exit");
				System.out.print("Enter Option Number: ");

				option = Integer.parseInt(reader.readLine());

				if (option < 1 || option > 5) {
					throw new NumberFormatException();
				}

				switch (option) {

				case 1:
					System.out.println("\n--Add New Key--");
					System.out.print("Enter New Key: ");

					try {
						key = Integer.parseInt(reader.readLine());

						if (key <= 0) {
							System.out.println("Only Enter POSITIVE INTEGERS!\nPlease try again.");
						} else {
							hashtable.add(key);
						}
					} catch (NumberFormatException e) {
						System.out.println("The only allowed inputs are POSITIVE INTEGERS!\nPlease try again.");

					}

					break;

				case 2:
					System.out.println("\n--Display Hash Table--");
					hashtable.search();

					break;

				case 3:
					try {
						System.out.println("\n--Search Key--");
						System.out.print("Enter Key to Search: ");
						key = Integer.parseInt(reader.readLine());
						hashtable.search(key);
					} catch (NumberFormatException e) {
						System.out.println("The only allowed inputs are POSITIVE INTEGERS!\nPlease try again.");
					} catch (ArrayIndexOutOfBoundsException e) {
						System.out.println(
								"The only allowed inputs are POSITIVE INTEGERS, no Negative Integer!\nPlease try again.");
					}

					break;

				case 4:
					try {
						System.out.println("\n--Delete Key--");
						System.out.print("Enter Key to Delete: ");
						key = Integer.parseInt(reader.readLine());
						hashtable.delete(key);
					} catch (NumberFormatException e) {
						System.out.println("The only allowed inputs are POSITIVE INTEGERS!\nPlease try again.");
					} catch (ArrayIndexOutOfBoundsException e) {
						System.out.println(
								"The only allowed inputs are POSITIVE INTEGERS, no Negative Integer!\nPlease try again.");
					}

					break;

				case 5:
					System.out.print("\n--Exit--" + "\nProgram will be terminated");

					for (int i = 0; i < 3; i++) {
						Thread.sleep(1000);
						System.out.print(".");
					}
					System.out.print("\nProgram terminated.");
					System.exit(0);
				}
			}

			catch (NumberFormatException e) {
				System.out.println("Option number must be selected from NUMBERS 1-5 only!\nPlease try again.");
			}
		}
	}
}
