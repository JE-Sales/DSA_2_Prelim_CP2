public class LinkedList {
	private Node head;


	public void append(Node node) {
		if (head == null) {
			head = node;
		} else {
			Node currentNode = head;
			while (currentNode.getNext() != null) {
				currentNode = currentNode.getNext();
			}
			currentNode.setNext(node);
		}
	}

	public boolean search(int key) {
		Node temp = head;

		while (temp != null) {
			if (temp.getData() == key)
				return true;
			temp = temp.getNext();
		}

		return false;

	}

	public void delete(int key) {
		Node temp = head, prev = null;

		if (temp != null && temp.getData() == key) {
			head = head.getNext() != null ? head.getNext() : null;
			return;
		}

		while (temp != null) {
			prev = temp;
			temp = temp.getNext();

			if (temp.getData() == key) {
				prev.setNext(temp.getNext() != null ? temp.getNext() : null);
				return;
			}
		}

		if (temp == null) {
			System.out.println("Key does not exist in the list.");
		}

	}
	

	public void display() {
		Node currentNode = head;
		String str = "";
		while (currentNode != null) {
			str += String.valueOf(currentNode.getData()) + " -> ";
			currentNode = currentNode.getNext();
		}
		if (str != "") {
			str = str.substring(0, str.length() - 4);
		}
		System.out.println(str);
	}
	
	public boolean isEmpty() {
		boolean isEmpty = true;
		if(this.head == null) {
			isEmpty = true;
		}else {
			isEmpty = false;
		}
		return isEmpty;
	}

}
