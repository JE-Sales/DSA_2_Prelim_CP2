
public class LinkedList {
	private Node head;


	public void append(Node node) {
		if (head == null) {
			head = node;
		} else {
			Node currentNode = head;
			while (currentNode.getNext() != null) {
				currentNode = currentNode.getNext();
			}
			currentNode.setNext(node);
		}
	}

	public boolean search(int key) {
		Node currentNode = head;

		while (currentNode != null) {
			if (currentNode.getData() == key)
				return true;
			currentNode = currentNode.getNext();
		}
		return false;
	}

	public void delete(int key) {
		Node currentNode = head, prev = null;

		if (currentNode != null && currentNode.getData() == key) {
			head = head.getNext() != null ? head.getNext() : null;
			return;
		}

		while (currentNode != null) {
			prev = currentNode;
			currentNode = currentNode.getNext();

			if (currentNode.getData() == key) {
				prev.setNext(currentNode.getNext() != null ? currentNode.getNext() : null);
				return;
			}
		}

		if (currentNode == null) {
			System.out.println("Key does not exist in the list.");
		}

	}
	public void display() {
		Node currentNode = head;
		String str = "";
		while (currentNode != null) {
			str += String.valueOf(currentNode.getData()) + " -> ";
			currentNode = currentNode.getNext();
		}
		if (str != "") {
			str = str.substring(0, str.length() - 4);
		}
		System.out.println(str);
	}

}
